name: Deploy to EKS
on:
  push:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ vars.REGISTRY }}
        REPOSITORY: ${{ github.event.repository.name }} 
        IMAGE_TAG: ${{ github.sha }}
        APP_PORT: ${{ vars.APP_PORT }}
      run: |
        docker build --build-arg PORT=$APP_PORT -t $REPOSITORY ./
        docker tag $REPOSITORY:latest $REGISTRY/$REPOSITORY:$IMAGE_TAG
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
  cd:
    needs: ci
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Install kubectl
      uses: ianbelcher/eks-kubectl-action@master
      with:
        cluster_name: ${{ vars.CLUSTER_NAME }}
        kubernetes_version: v1.21.0

    - name: Update kube config
      run: aws eks update-kubeconfig --region ${{ vars.AWS_REGION }} --name ${{ vars.CLUSTER_NAME }}

    - name: Get envs
      run: |
        echo "connectionString=${{ secrets.CONNECTION_STRING }}" >> $GITHUB_ENV
        echo "poolId=${{ vars.POOL_ID }}" >> $GITHUB_ENV
        echo "poolClientId=${{ vars.POOL_CLIENT_ID }}" >> $GITHUB_ENV
        echo "imgTag=${{ github.sha }}" >> $GITHUB_ENV
        echo "awsEcrRegistry=${{ vars.REGISTRY }}" >> $GITHUB_ENV
        echo "appPort=${{ vars.APP_PORT }}" >> $GITHUB_ENV
        echo "repositoryName=${{ github.event.repository.name }}" >> $GITHUB_ENV

    - name: Replaces envs
      run: |
        cd Cluster/kubernets
        envsubst < api.template.yml > api.yml 
    
    - name: Deploy to EKS
      run: |
        kubectl apply -f ./Cluster/kubernets/api.yml
